[{"/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/index.js":"1","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/App.js":"2","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/home.js":"3","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/Signin.js":"4","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/verifyLink.js":"5","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/Signup.js":"6","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/Dashboard.js":"7","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/listItems.js":"8","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/Deposits.js":"9","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/Chart.js":"10","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/Orders.js":"11","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/Title.js":"12"},{"size":230,"mtime":1611855188217,"results":"13","hashOfConfig":"14"},{"size":630,"mtime":1611937474386,"results":"15","hashOfConfig":"14"},{"size":3780,"mtime":1611854777815,"results":"16","hashOfConfig":"14"},{"size":5961,"mtime":1611935341468,"results":"17","hashOfConfig":"14"},{"size":691,"mtime":1611854777816,"results":"18","hashOfConfig":"14"},{"size":5110,"mtime":1611924492645,"results":"19","hashOfConfig":"14"},{"size":8385,"mtime":1611937770737,"results":"20","hashOfConfig":"14"},{"size":1768,"mtime":1611937865665,"results":"21","hashOfConfig":"14"},{"size":954,"mtime":1611700207662,"results":"22","hashOfConfig":"14"},{"size":1714,"mtime":1611700120960,"results":"23","hashOfConfig":"14"},{"size":2669,"mtime":1611700268520,"results":"24","hashOfConfig":"14"},{"size":362,"mtime":1611700314366,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ag6pq",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/index.js",[],["54","55"],"/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/App.js",["56"],"/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/home.js",[],["57","58"],"/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/Signin.js",["59"],"import React, { useEffect } from 'react';\nimport GoogleLogin from 'react-google-login';\nimport axios from 'axios';\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n///\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\naxios.defaults.withCredentials = true;\nconst CLIENT_ID = \"797191547152-h2lf9jrigv5bmc3rv4cic2ph3vr42m45.apps.googleusercontent.com\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright Â© '}\n            <Link color=\"inherit\" href=\"#\">\n                TaskMe - David and Saar Ltd\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n///\n\nconst Signin = () => {\n    const classes = useStyles();\n    let history = useHistory();\n\n    const [emailLog, setEmailLog] = useState(\"\");\n    const [passwordLog, setPasswordLog] = useState(\"\");\n\n    const [loginStatus , setLoginStatus ] = useState(\"\");\n\n    const signIn = () => {\n        axios.post(`http://localhost:5500/auth/sign-in`, {\n            email: emailLog,\n            password: passwordLog,\n        }).then((response => {\n            console.log(response.data.message)\n            if(response.data.message){\n                setLoginStatus(response.data.message);\n            }else{\n                setLoginStatus(response.data.user.name);\n                history.push('/dashboard')\n            }\n        }))\n    }\n    useEffect(() => {\n        axios.get(\"http://localhost:5500/auth/sign-in\").then((response) =>{\n            if(response.data.loggedIn === true){\n                setLoginStatus(response.data.loggedIn);\n            }\n            console.log(response.data);\n        })\n    }, []);\n\n    const responseSuccessGoogle = (response) => {\n        axios({\n            method: \"POST\",\n            url: \"http://localhost:5500/auth/googlelogin\",\n            data: { tokenId: response.tokenId }\n        }).then(response => {\n            history.push('/dashboard')\n            console.log(JSON.stringify(response.data));\n        })\n    }\n\n    const responseErrorGoogle = (response) => {\n        console.log(response);\n    }\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n\n                <form className={classes.form} noValidate>\n                    <TextField\n                        onChange={(e) => {setEmailLog(e.target.value)}}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                    />\n                    <TextField\n                        onChange={(e) => {setPasswordLog(e.target.value)}}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        onClick={signIn}\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link href=\"/signup\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n                <br/>\n                <GoogleLogin\n                    clientId = {CLIENT_ID}\n                    buttonText=\"Login With Google\"\n                    onSuccess={responseSuccessGoogle}\n                    onFailure={responseErrorGoogle}\n                    cookiePolicy={'single_host_origin'}\n\n                />\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default Signin;","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/verifyLink.js",[],"/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/Signup.js",["60"],"import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n///\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\naxios.defaults.withCredentials = true;\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright Â© '}\n            <Link color=\"inherit\" href=\"#\">\n                TaskMe - David and Saar Ltd\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n///\nconst Signup = () => {\n    let history = useHistory();\n\n    const classes = useStyles();\n    const [emailReg, setEmailReg] = useState(\"\");\n    const [passwordReg, setPasswordReg] = useState(\"\");\n    const [nameReg, setNameReg] = useState(\"\");\n\n    const [loginStatus , setLoginStatus ] = useState(\"\");\n    const register = () => {\n        axios.post('http://localhost:5500/auth/signup', {\n            email: emailReg,\n            password: passwordReg,\n            name: nameReg,\n        }).then((response => {\n            console.log(JSON.stringify(response.data));\n            history.push('/')\n        }))\n    }\n    useEffect(() => {\n        axios.get(\"http://localhost:5500/auth/sign-in\").then((response) =>{\n            if(response.data.loggedIn === true)\n                setLoginStatus(response.data.loggedIn);\n            console.log(response.data);\n        })\n    }, []);\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Registeration\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        onChange={(e) => {setEmailReg(e.target.value)}}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required=\"true\"\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                    />\n                    <TextField\n                        onChange={(e) => {setNameReg(e.target.value)}}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Full Name\"\n                        name=\"name\"\n                        autoComplete=\"name\"\n                        autoFocus\n                    />\n                    <TextField\n                        onChange={(e) => {setPasswordReg(e.target.value)}}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    <Button\n                        onClick={register}\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Register\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link href=\"/\" variant=\"body2\">\n                                {\"Already have an account? Sign In\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default Signup;","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/Dashboard.js",["61","62"],"/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/listItems.js",[],"/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/Deposits.js",[],"/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/Chart.js",[],"/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/Orders.js",[],"/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/Title.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":9,"column":12,"nodeType":"69","messageId":"70","endLine":9,"endColumn":18},{"ruleId":"63","replacedBy":"71"},{"ruleId":"65","replacedBy":"72"},{"ruleId":"67","severity":1,"message":"73","line":64,"column":12,"nodeType":"69","messageId":"70","endLine":64,"endColumn":23},{"ruleId":"67","severity":1,"message":"73","line":61,"column":12,"nodeType":"69","messageId":"70","endLine":61,"endColumn":23},{"ruleId":"67","severity":1,"message":"73","line":124,"column":12,"nodeType":"69","messageId":"70","endLine":124,"endColumn":23},{"ruleId":"74","severity":1,"message":"75","line":146,"column":8,"nodeType":"76","endLine":146,"endColumn":10,"suggestions":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar",["78"],["79"],"'loginStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["80"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [history]",{"range":"83","text":"84"},[4513,4515],"[history]"]