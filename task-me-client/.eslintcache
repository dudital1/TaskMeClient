[{"/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/index.js":"1","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/App.js":"2","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/Signup.js":"3","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/Signin.js":"4","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/verifyLink.js":"5","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/Dashboard.js":"6","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/Chart.js":"7","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/Orders.js":"8","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/listItems.js":"9","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/OverallStats.js":"10","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/Title.js":"11"},{"size":230,"mtime":1611855188217,"results":"12","hashOfConfig":"13"},{"size":630,"mtime":1611937474386,"results":"14","hashOfConfig":"13"},{"size":5110,"mtime":1611924492645,"results":"15","hashOfConfig":"13"},{"size":6331,"mtime":1612089549770,"results":"16","hashOfConfig":"13"},{"size":691,"mtime":1611854777816,"results":"17","hashOfConfig":"13"},{"size":9225,"mtime":1612091083814,"results":"18","hashOfConfig":"13"},{"size":1714,"mtime":1611700120960,"results":"19","hashOfConfig":"13"},{"size":3364,"mtime":1612091039440,"results":"20","hashOfConfig":"13"},{"size":1768,"mtime":1611937865665,"results":"21","hashOfConfig":"13"},{"size":1485,"mtime":1612089253947,"results":"22","hashOfConfig":"13"},{"size":362,"mtime":1611700314366,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"ag6pq",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/index.js",[],["51","52"],"/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/App.js",["53"],"import '../App.css';\n// import Home from \"./home\";\nimport Signin from \"./Signin\";\nimport Signup from \"./Signup\";\nimport VerifyLink from \"./verifyLink\";\nimport Dashboard from \"./dashboard/Dashboard\";\nimport {\n    BrowserRouter as Router,\n    Route, Switch\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Signin}></Route>\n      <Route exact path=\"/dashboard\" component={Dashboard}></Route>\n      <Route exact path=\"/signup\" component={Signup}></Route>\n      <Route exact path=\"/auth/activate/:token\" component={VerifyLink}></Route>\n    </Router>\n  )\n}\nexport default App;\n","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/Signup.js",["54"],"import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n///\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\naxios.defaults.withCredentials = true;\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright Â© '}\n            <Link color=\"inherit\" href=\"#\">\n                TaskMe - David and Saar Ltd\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n///\nconst Signup = () => {\n    let history = useHistory();\n\n    const classes = useStyles();\n    const [emailReg, setEmailReg] = useState(\"\");\n    const [passwordReg, setPasswordReg] = useState(\"\");\n    const [nameReg, setNameReg] = useState(\"\");\n\n    const [loginStatus , setLoginStatus ] = useState(\"\");\n    const register = () => {\n        axios.post('http://localhost:5500/auth/signup', {\n            email: emailReg,\n            password: passwordReg,\n            name: nameReg,\n        }).then((response => {\n            console.log(JSON.stringify(response.data));\n            history.push('/')\n        }))\n    }\n    useEffect(() => {\n        axios.get(\"http://localhost:5500/auth/sign-in\").then((response) =>{\n            if(response.data.loggedIn === true)\n                setLoginStatus(response.data.loggedIn);\n            console.log(response.data);\n        })\n    }, []);\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Registeration\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        onChange={(e) => {setEmailReg(e.target.value)}}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required=\"true\"\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                    />\n                    <TextField\n                        onChange={(e) => {setNameReg(e.target.value)}}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Full Name\"\n                        name=\"name\"\n                        autoComplete=\"name\"\n                        autoFocus\n                    />\n                    <TextField\n                        onChange={(e) => {setPasswordReg(e.target.value)}}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    <Button\n                        onClick={register}\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Register\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link href=\"/\" variant=\"body2\">\n                                {\"Already have an account? Sign In\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default Signup;","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/Signin.js",["55","56"],"import React, { useEffect } from 'react';\nimport GoogleLogin from 'react-google-login';\nimport axios from 'axios';\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n///\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\naxios.defaults.withCredentials = true;\nconst CLIENT_ID = \"797191547152-h2lf9jrigv5bmc3rv4cic2ph3vr42m45.apps.googleusercontent.com\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright Â© '}\n            <Link color=\"inherit\" href=\"#\">\n                TaskMe - David and Saar Ltd\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n///\n\nconst Signin = (props) => {\n    const classes = useStyles();\n    let history = useHistory();\n\n    const [emailLog, setEmailLog] = useState(\"\");\n    const [user,setUser ] = useState(\"\");\n    const [passwordLog, setPasswordLog] = useState(\"\");\n\n    const [loginStatus , setLoginStatus ] = useState(\"\");\n\n    const signIn = () => {\n        axios.post(`http://localhost:5500/auth/sign-in`, {\n            email: emailLog,\n            password: passwordLog,\n        }).then((response => {\n            console.log(response.data.message)\n            if(response.data.message){\n                setLoginStatus(response.data.message);\n            }else{\n                setLoginStatus(response.data.user.name);\n                setUser(response.data.user);\n                console.log(\"sign in\", response.data.user)\n                history.push('/dashboard')\n                // props.history.push({\n                //     pathname:'/dashboard',\n                //     user\n                // })\n            }\n        }))\n    }\n    useEffect(() => {\n        axios.get(\"http://localhost:5500/auth/sign-in\").then((response) =>{\n            if(response.data.loggedIn === true){\n                setLoginStatus(response.data.loggedIn);\n            }\n            console.log(response.data);\n        })\n    }, []);\n\n    const responseSuccessGoogle = (response) => {\n        axios({\n            method: \"POST\",\n            url: \"http://localhost:5500/auth/googlelogin\",\n            data: { tokenId: response.tokenId }\n        }).then(response => {\n            localStorage.setItem('storageUser',JSON.stringify(response.data.user));\n            localStorage.setItem('storageLogin',true);\n            history.push('/dashboard')\n        })\n    }\n\n    const responseErrorGoogle = (response) => {\n        console.log(response);\n    }\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n\n                <form className={classes.form} noValidate>\n                    <TextField\n                        onChange={(e) => {setEmailLog(e.target.value)}}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                    />\n                    <TextField\n                        onChange={(e) => {setPasswordLog(e.target.value)}}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        onClick={signIn}\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link href=\"/signup\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n                <br/>\n                <GoogleLogin\n                    clientId = {CLIENT_ID}\n                    buttonText=\"Login With Google\"\n                    onSuccess={responseSuccessGoogle}\n                    onFailure={responseErrorGoogle}\n                    cookiePolicy={'single_host_origin'}\n\n                />\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default Signin;","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/verifyLink.js",[],"/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/Dashboard.js",["57","58","59"],"/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/Chart.js",[],"/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/Orders.js",["60"],"/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/listItems.js",[],"/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/OverallStats.js",["61","62","63"],"import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport {useEffect, useState} from 'react';\n\n\nfunction preventDefault(event) {\n    event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n    depositContext: {\n        flex: 1,\n    },\n});\n\nexport default function OverallStats() {\n    let history = useHistory();\n    const classes = useStyles();\n    const [user , setUser ] = useState({});\n    const [allTasks , setAllTasks ] = useState(null);\n    \n\n    useEffect(() => {\n        axios.get(\"http://localhost:5500/auth/sign-in\").then((response) =>{\n            if(response.data.loggedIn === true){\n                setUser(response.data.user);\n            }\n            else\n                history.push('/');\n        })\n    }, []);\n\n\n\n    return (\n        <React.Fragment>\n            <Title>{user.name}</Title>\n            <Typography component=\"p\" variant=\"h4\">\n                {}\n            </Typography>\n            <Typography color=\"textSecondary\" className={classes.depositContext}>\n                on 15 March, 2019\n            </Typography>\n            <div>\n                <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n                    View balance\n                </Link>\n            </div>\n        </React.Fragment>\n    );\n}","/Users/saarp/Desktop/Shenkar/DCS/TaskMeClient/task-me-client/src/components/dashboard/Title.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":9,"column":12,"nodeType":"70","messageId":"71","endLine":9,"endColumn":18},{"ruleId":"68","severity":1,"message":"72","line":61,"column":12,"nodeType":"70","messageId":"71","endLine":61,"endColumn":23},{"ruleId":"68","severity":1,"message":"73","line":62,"column":12,"nodeType":"70","messageId":"71","endLine":62,"endColumn":16},{"ruleId":"68","severity":1,"message":"72","line":65,"column":12,"nodeType":"70","messageId":"71","endLine":65,"endColumn":23},{"ruleId":"68","severity":1,"message":"74","line":123,"column":26,"nodeType":"70","messageId":"71","endLine":123,"endColumn":40},{"ruleId":"68","severity":1,"message":"75","line":124,"column":19,"nodeType":"70","messageId":"71","endLine":124,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":159,"column":7,"nodeType":"78","endLine":159,"endColumn":9,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"80","line":52,"column":8,"nodeType":"78","endLine":52,"endColumn":10,"suggestions":"81"},{"ruleId":"68","severity":1,"message":"82","line":25,"column":12,"nodeType":"70","messageId":"71","endLine":25,"endColumn":20},{"ruleId":"68","severity":1,"message":"83","line":25,"column":23,"nodeType":"70","messageId":"71","endLine":25,"endColumn":34},{"ruleId":"76","severity":1,"message":"84","line":36,"column":8,"nodeType":"78","endLine":36,"endColumn":10,"suggestions":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'loginStatus' is assigned a value but never used.","'user' is assigned a value but never used.","'setLoginStatus' is assigned a value but never used.","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'loginStatus', 'tasks', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["88"],"React Hook useEffect has missing dependencies: 'history' and 'user'. Either include them or remove the dependency array.",["89"],"'allTasks' is assigned a value but never used.","'setAllTasks' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [history, loginStatus, tasks, user]",{"range":"97","text":"98"},"Update the dependencies array to be: [history, user]",{"range":"99","text":"100"},"Update the dependencies array to be: [history]",{"range":"101","text":"102"},[5128,5130],"[history, loginStatus, tasks, user]",[1951,1953],"[history, user]",[960,962],"[history]"]