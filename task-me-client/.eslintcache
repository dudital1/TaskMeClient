[{"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\index.js":"1","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\App.js":"2","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\verifyLink.js":"3","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\Signin.js":"4","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\Signup.js":"5","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\Dashboard.js":"6","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\listItems.js":"7","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\Chart.js":"8","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\Orders.js":"9","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\Title.js":"10","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\OverallStats.js":"11"},{"size":241,"mtime":1612009987438,"results":"12","hashOfConfig":"13"},{"size":652,"mtime":1612009987431,"results":"14","hashOfConfig":"13"},{"size":714,"mtime":1611853993186,"results":"15","hashOfConfig":"13"},{"size":6137,"mtime":1612009987431,"results":"16","hashOfConfig":"13"},{"size":5261,"mtime":1612010030820,"results":"17","hashOfConfig":"13"},{"size":8668,"mtime":1612016194114,"results":"18","hashOfConfig":"13"},{"size":1823,"mtime":1612009987437,"results":"19","hashOfConfig":"13"},{"size":1767,"mtime":1612009987433,"results":"20","hashOfConfig":"13"},{"size":2737,"mtime":1612009987436,"results":"21","hashOfConfig":"13"},{"size":376,"mtime":1612009987437,"results":"22","hashOfConfig":"13"},{"size":1892,"mtime":1612017521835,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1byuelv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\index.js",[],["50","51"],"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\App.js",["52"],"import '../App.css';\r\n// import Home from \"./home\";\r\nimport Signin from \"./Signin\";\r\nimport Signup from \"./Signup\";\r\nimport VerifyLink from \"./verifyLink\";\r\nimport Dashboard from \"./dashboard/Dashboard\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route, Switch\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Route exact path=\"/\" component={Signin}></Route>\r\n      <Route exact path=\"/dashboard\" component={Dashboard}></Route>\r\n      <Route exact path=\"/signup\" component={Signup}></Route>\r\n      <Route exact path=\"/auth/activate/:token\" component={VerifyLink}></Route>\r\n    </Router>\r\n  )\r\n}\r\nexport default App;\r\n","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\verifyLink.js",[],"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\Signin.js",["53"],"import React, { useEffect } from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport axios from 'axios';\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n///\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\naxios.defaults.withCredentials = true;\r\nconst CLIENT_ID = \"797191547152-h2lf9jrigv5bmc3rv4cic2ph3vr42m45.apps.googleusercontent.com\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright Â© '}\r\n            <Link color=\"inherit\" href=\"#\">\r\n                TaskMe - David and Saar Ltd\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n///\r\n\r\nconst Signin = () => {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const [emailLog, setEmailLog] = useState(\"\");\r\n    const [passwordLog, setPasswordLog] = useState(\"\");\r\n\r\n    const [loginStatus , setLoginStatus ] = useState(\"\");\r\n\r\n    const signIn = () => {\r\n        axios.post(`http://localhost:5500/auth/sign-in`, {\r\n            email: emailLog,\r\n            password: passwordLog,\r\n        }).then((response => {\r\n            console.log(response.data.message)\r\n            if(response.data.message){\r\n                setLoginStatus(response.data.message);\r\n            }else{\r\n                setLoginStatus(response.data.user.name);\r\n                history.push('/dashboard')\r\n            }\r\n        }))\r\n    }\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:5500/auth/sign-in\").then((response) =>{\r\n            if(response.data.loggedIn === true){\r\n                setLoginStatus(response.data.loggedIn);\r\n            }\r\n            console.log(response.data);\r\n        })\r\n    }, []);\r\n\r\n    const responseSuccessGoogle = (response) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: \"http://localhost:5500/auth/googlelogin\",\r\n            data: { tokenId: response.tokenId }\r\n        }).then(response => {\r\n            history.push('/dashboard')\r\n            console.log(JSON.stringify(response.data));\r\n        })\r\n    }\r\n\r\n    const responseErrorGoogle = (response) => {\r\n        console.log(response);\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        onChange={(e) => {setEmailLog(e.target.value)}}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        onChange={(e) => {setPasswordLog(e.target.value)}}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        onClick={signIn}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link href=\"/signup\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n                <br/>\r\n                <GoogleLogin\r\n                    clientId = {CLIENT_ID}\r\n                    buttonText=\"Login With Google\"\r\n                    onSuccess={responseSuccessGoogle}\r\n                    onFailure={responseErrorGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n\r\n                />\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Signin;","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\Signup.js",["54"],"import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n///\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\naxios.defaults.withCredentials = true;\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright Â© '}\r\n            <Link color=\"inherit\" href=\"#\">\r\n                TaskMe - David and Saar Ltd\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n///\r\nconst Signup = () => {\r\n    let history = useHistory();\r\n\r\n    const classes = useStyles();\r\n    const [emailReg, setEmailReg] = useState(\"\");\r\n    const [passwordReg, setPasswordReg] = useState(\"\");\r\n    const [nameReg, setNameReg] = useState(\"\");\r\n\r\n    const [loginStatus , setLoginStatus ] = useState(\"\");\r\n    const register = () => {\r\n        axios.post('http://localhost:5500/auth/signup', {\r\n            email: emailReg,\r\n            password: passwordReg,\r\n            name: nameReg,\r\n        }).then((response => {\r\n            console.log(JSON.stringify(response.data));\r\n            history.push('/')\r\n        }))\r\n    }\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:5500/auth/sign-in\").then((response) =>{\r\n            if(response.data.loggedIn === true)\r\n                setLoginStatus(response.data.loggedIn);\r\n            console.log(response.data);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Registeration\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        onChange={(e) => {setEmailReg(e.target.value)}}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required=\"true\"\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        onChange={(e) => {setNameReg(e.target.value)}}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        label=\"Full Name\"\r\n                        name=\"name\"\r\n                        autoComplete=\"name\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        onChange={(e) => {setPasswordReg(e.target.value)}}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <Button\r\n                        onClick={register}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Register\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link href=\"/\" variant=\"body2\">\r\n                                {\"Already have an account? Sign In\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Signup;","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\Dashboard.js",["55","56"],"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\listItems.js",[],"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\Chart.js",[],"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\Orders.js",[],"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\Title.js",[],"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\OverallStats.js",["57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":9,"column":12,"nodeType":"64","messageId":"65","endLine":9,"endColumn":18},{"ruleId":"62","severity":1,"message":"66","line":64,"column":12,"nodeType":"64","messageId":"65","endLine":64,"endColumn":23},{"ruleId":"62","severity":1,"message":"66","line":61,"column":12,"nodeType":"64","messageId":"65","endLine":61,"endColumn":23},{"ruleId":"62","severity":1,"message":"66","line":124,"column":12,"nodeType":"64","messageId":"65","endLine":124,"endColumn":23},{"ruleId":"67","severity":1,"message":"68","line":146,"column":8,"nodeType":"69","endLine":146,"endColumn":10,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"71","line":37,"column":8,"nodeType":"69","endLine":37,"endColumn":10,"suggestions":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'loginStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["75"],"React Hook useEffect has missing dependencies: 'getAllTasks' and 'history'. Either include them or remove the dependency array.",["76"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [history]",{"range":"81","text":"82"},"Update the dependencies array to be: [getAllTasks, history]",{"range":"83","text":"84"},[4668,4670],"[history]",[1045,1047],"[getAllTasks, history]"]