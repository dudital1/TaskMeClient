[{"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\index.js":"1","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\App.js":"2","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\Signin.js":"3","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\verifyLink.js":"4","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\Signup.js":"5","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\Dashboard.js":"6","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\listItems.js":"7","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\OverallStats.js":"8","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\Chart.js":"9","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\Orders.js":"10","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\Title.js":"11","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\profile.js":"12","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\main.js":"13","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\home.js":"14"},{"size":241,"mtime":1612126866112,"results":"15","hashOfConfig":"16"},{"size":624,"mtime":1612162685890,"results":"17","hashOfConfig":"16"},{"size":6290,"mtime":1612163607597,"results":"18","hashOfConfig":"16"},{"size":827,"mtime":1612162853982,"results":"19","hashOfConfig":"16"},{"size":5262,"mtime":1612162765975,"results":"20","hashOfConfig":"16"},{"size":5705,"mtime":1612161755335,"results":"21","hashOfConfig":"16"},{"size":2116,"mtime":1612163789674,"results":"22","hashOfConfig":"16"},{"size":1927,"mtime":1612126866109,"results":"23","hashOfConfig":"16"},{"size":1767,"mtime":1612126866107,"results":"24","hashOfConfig":"16"},{"size":1888,"mtime":1612145601227,"results":"25","hashOfConfig":"16"},{"size":376,"mtime":1612126866109,"results":"26","hashOfConfig":"16"},{"size":730,"mtime":1612144394049,"results":"27","hashOfConfig":"16"},{"size":7424,"mtime":1612163770549,"results":"28","hashOfConfig":"16"},{"size":3889,"mtime":1612126866110,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1byuelv",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\index.js",[],["62","63"],"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\App.js",[],"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\Signin.js",["64"],"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\verifyLink.js",[],"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\Signup.js",["65"],"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\Dashboard.js",["66","67","68"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport Chart from './Chart';\r\nimport OverallStats from './OverallStats';\r\nimport DataTable from './Orders';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright Â© '}\r\n            <Link color=\"inherit\" href=\"#\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\nconst Dashboard = () => {\r\n\r\n    let history = useHistory();\r\n    const user = JSON.parse(localStorage.getItem(\"storageUser\"));\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    return (\r\n        <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={4} lg={3}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <OverallStats tmpUser={user} category={\"Meeting\"}/>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} md={4} lg={3}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <OverallStats tmpUser={user} category={\"Training\"} />\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} md={4} lg={3}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <OverallStats tmpUser={user} category={\"Education\"}/>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} md={4} lg={3}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <OverallStats tmpUser={user} category={\"General\"}/>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} md={4} lg={3}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <OverallStats tmpUser={user} category={\"Home\"}/>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} md={4} lg={3}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <OverallStats tmpUser={user} category={\"All\"}/>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <DataTable tmpUser={user}/>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} md={8} lg={9}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <Chart  tmpUser ={user}/>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n            <Box pt={4}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    </main>\r\n    );\r\n};\r\nexport default Dashboard;\r\n\r\n\r\n\r\n\r\n","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\listItems.js",[],"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\OverallStats.js",["69","70","71","72","73","74","75"],"import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Title from './Title';\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {useEffect, useState} from 'react';\r\n\r\nfunction preventDefault(event) {\r\n    event.preventDefault();\r\n}\r\nconst useStyles = makeStyles({\r\n    depositContext: {\r\n        flex: 1,\r\n    },\r\n});\r\n\r\nexport default function OverallStats({tmpUser, category}) {\r\n\r\n    const classes = useStyles();\r\n    const [user , setUser ] = useState(tmpUser);\r\n    const [allTasks , setAllTasks ] = useState([]);\r\n    const [categoryLength , setCategoryLength ] = useState(null);\r\n    const [completedNumber , setCompletedNumber ] = useState(null);\r\n\r\n    const tasksByCategory = () => {\r\n        let call=`http://localhost:5500/api/tasks/?category=${category}`\r\n        if (category==\"All\")\r\n            call=\"http://localhost:5500/api/tasks/\"\r\n        return(\r\n        axios.post(`${call}`, {\r\n            email: user.email,\r\n        }).then((response => {\r\n            setAllTasks(response.data)\r\n            setCategoryLength(response.data.length)\r\n            setCompletedNumber(response.data.filter(task => task.status===\"Done\").length)\r\n        })))\r\n    }\r\n    useEffect(() => {\r\n        tasksByCategory()\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Typography component=\"p\" variant=\"h4\">\r\n                {category}\r\n            </Typography>\r\n            <Title>{completedNumber?completedNumber:\"Loading...\"}/{categoryLength?categoryLength:\"Loading...\"}</Title>\r\n            <Typography component=\"p\" variant=\"h4\">\r\n            </Typography>\r\n            <Typography color=\"textSecondary\" className={classes.depositContext}>\r\n                Completed\r\n            </Typography>\r\n        </React.Fragment>\r\n    );\r\n}","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\Chart.js",[],"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\Orders.js",["76","77","78"],"import * as React from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\n\r\nconst columns = [\r\n  { field: 'id', headerName: 'ID', width: 70 },\r\n  { field: 'firstName', headerName: 'First name', width: 130 },\r\n  { field: 'lastName', headerName: 'Last name', width: 130 },\r\n  {\r\n    field: 'age',\r\n    headerName: 'Age',\r\n    type: 'number',\r\n    width: 90,\r\n  },\r\n  {\r\n    field: 'fullName',\r\n    headerName: 'Full name',\r\n    description: 'This column has a value getter and is not sortable.',\r\n    sortable: false,\r\n    width: 160,\r\n    valueGetter: (params) =>\r\n      `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\r\n  },\r\n];\r\n\r\nconst rows = [\r\n  { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n  { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\r\n  { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\r\n  { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\r\n  { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\r\n  { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\r\n  { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\r\n  { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\r\n  { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\r\n];\r\n\r\nexport default function DataTable({tmpUser}) {\r\n    const user = tmpUser;\r\n    const [tasks , setTasks] = useState([]);\r\n    function getTasks(){\r\n        axios.post('http://localhost:5500/api/tasks' , {\r\n            email: user.email\r\n        }).then((response) => {\r\n            console.log(response.data);\r\n            setTasks(response.data);\r\n        })\r\n    }\r\n\r\n  return (\r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\r\n    </div>\r\n  );\r\n}","C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\Title.js",[],"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\profile.js",["79","80","81","82","83","84"],"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\dashboard\\main.js",["85","86","87","88","89","90","91","92"],"C:\\Users\\dudit\\Desktop\\prog\\nodejs\\DCS-TaskMe\\TaskMeClient\\task-me-client\\src\\components\\home.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"101","line":61,"column":12,"nodeType":"99","messageId":"100","endLine":61,"endColumn":23},{"ruleId":"97","severity":1,"message":"102","line":128,"column":12,"nodeType":"99","messageId":"100","endLine":128,"endColumn":17},{"ruleId":"97","severity":1,"message":"103","line":128,"column":19,"nodeType":"99","messageId":"100","endLine":128,"endColumn":27},{"ruleId":"104","severity":1,"message":"105","line":149,"column":9,"nodeType":"106","endLine":149,"endColumn":11,"suggestions":"107"},{"ruleId":"97","severity":1,"message":"108","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":12},{"ruleId":"97","severity":1,"message":"109","line":7,"column":10,"nodeType":"99","messageId":"100","endLine":7,"endColumn":20},{"ruleId":"97","severity":1,"message":"110","line":10,"column":10,"nodeType":"99","messageId":"100","endLine":10,"endColumn":24},{"ruleId":"97","severity":1,"message":"111","line":22,"column":19,"nodeType":"99","messageId":"100","endLine":22,"endColumn":26},{"ruleId":"97","severity":1,"message":"112","line":23,"column":12,"nodeType":"99","messageId":"100","endLine":23,"endColumn":20},{"ruleId":"113","severity":1,"message":"114","line":29,"column":21,"nodeType":"115","messageId":"116","endLine":29,"endColumn":23},{"ruleId":"104","severity":1,"message":"117","line":42,"column":8,"nodeType":"106","endLine":42,"endColumn":10,"suggestions":"118"},{"ruleId":"97","severity":1,"message":"98","line":4,"column":10,"nodeType":"99","messageId":"100","endLine":4,"endColumn":19},{"ruleId":"97","severity":1,"message":"102","line":43,"column":12,"nodeType":"99","messageId":"100","endLine":43,"endColumn":17},{"ruleId":"97","severity":1,"message":"119","line":44,"column":14,"nodeType":"99","messageId":"100","endLine":44,"endColumn":22},{"ruleId":"97","severity":1,"message":"98","line":1,"column":16,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"120","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":13},{"ruleId":"97","severity":1,"message":"121","line":6,"column":10,"nodeType":"99","messageId":"100","endLine":6,"endColumn":20},{"ruleId":"97","severity":1,"message":"110","line":10,"column":10,"nodeType":"99","messageId":"100","endLine":10,"endColumn":24},{"ruleId":"97","severity":1,"message":"122","line":21,"column":11,"nodeType":"99","messageId":"100","endLine":21,"endColumn":15},{"ruleId":"97","severity":1,"message":"123","line":23,"column":11,"nodeType":"99","messageId":"100","endLine":23,"endColumn":18},{"ruleId":"97","severity":1,"message":"124","line":24,"column":22,"nodeType":"99","messageId":"100","endLine":24,"endColumn":28},{"ruleId":"97","severity":1,"message":"125","line":30,"column":10,"nodeType":"99","messageId":"100","endLine":30,"endColumn":19},{"ruleId":"97","severity":1,"message":"102","line":127,"column":12,"nodeType":"99","messageId":"100","endLine":127,"endColumn":17},{"ruleId":"97","severity":1,"message":"103","line":127,"column":19,"nodeType":"99","messageId":"100","endLine":127,"endColumn":27},{"ruleId":"97","severity":1,"message":"126","line":137,"column":11,"nodeType":"99","messageId":"100","endLine":137,"endColumn":27},{"ruleId":"104","severity":1,"message":"105","line":148,"column":9,"nodeType":"106","endLine":148,"endColumn":11,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":222,"column":1,"nodeType":"130","messageId":"131","endLine":222,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":224,"column":1,"nodeType":"130","messageId":"131","endLine":232,"endColumn":19},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'loginStatus' is assigned a value but never used.","'tasks' is assigned a value but never used.","'setTasks' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["134"],"'Link' is defined but never used.","'useHistory' is defined but never used.","'preventDefault' is defined but never used.","'setUser' is assigned a value but never used.","'allTasks' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'tasksByCategory'. Either include it or remove the dependency array.",["135"],"'getTasks' is defined but never used.","'axios' is defined but never used.","'createData' is defined but never used.","'user' is assigned a value but never used.","'classes' is assigned a value but never used.","'Router' is defined but never used.","'Copyright' is defined but never used.","'fixedHeightPaper' is assigned a value but never used.",["136"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"137","fix":"141"},"Update the dependencies array to be: [history, user]",{"range":"142","text":"143"},"Update the dependencies array to be: [tasksByCategory]",{"range":"144","text":"145"},{"range":"146","text":"143"},[4743,4745],"[history, user]",[1398,1400],"[tasksByCategory]",[4578,4580]]